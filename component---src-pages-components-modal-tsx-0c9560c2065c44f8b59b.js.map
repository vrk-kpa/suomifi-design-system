{"version":3,"file":"component---src-pages-components-modal-tsx-0c9560c2065c44f8b59b.js","mappings":"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","sources":["webpack://suomifi-design-system/./src/components/NoteBox.tsx","webpack://suomifi-design-system/./src/pages/components/modal.tsx"],"sourcesContent":["import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { useState } from 'react';\n\nimport modalContent from '../../../locale/fi/modal.json';\nimport { defaultSuomifiTheme, ModalProps } from 'suomifi-ui-components';\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport {\n  Text,\n  Paragraph,\n  Modal,\n  ModalContent,\n  ModalTitle,\n  ModalFooter,\n  Button,\n  Expander,\n  ExpanderGroup,\n  ExpanderContent,\n  ExpanderTitle,\n  Checkbox,\n  VisuallyHidden,\n} from 'components/ExampleComponents';\nimport {\n  Heading,\n  Text as ResponsiveText,\n  Paragraph as ResponsiveParagraph,\n} from 'components/ResponsiveComponents';\nimport ComponentDescription from 'components/ComponentDescription';\nimport Section from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\n\nconst Page = (): JSX.Element => (\n  <Layout sideNavData={sideNavData}>\n    <SEO title={modalContent.title} />\n    <Heading variant=\"h1\">{modalContent.title}</Heading>\n\n    <ResponsiveParagraph variant=\"lead\">\n      <ResponsiveText variant=\"lead\">{modalContent.intro}</ResponsiveText>\n    </ResponsiveParagraph>\n\n    <ConfirmExample title=\"\" desc=\"\" noCode />\n\n    <NoteBox\n      title={modalContent['note.title']}\n      items={modalContent['note.items']}\n    />\n\n    {modalContent.sections.map((section, index) => (\n      <Section\n        key={index}\n        mainTitle={section.title}\n        paragraphs={section.paragraphs}\n        links={section.links}\n      />\n    ))}\n\n    <ConfirmExample\n      title={modalContent['example.confirm.heading']}\n      desc={modalContent['example.confirm.description']}\n      noCode={false}\n    />\n\n    <DefaultExample\n      title={modalContent['example.default.heading']}\n      desc={modalContent['example.default.description']}\n    />\n    <DefaultExample\n      variant=\"smallScreen\"\n      title={modalContent['example.smallScreen.heading']}\n      desc={modalContent['example.smallScreen.description']}\n    />\n  </Layout>\n);\n\nconst ExpanderExampleContent = (): JSX.Element => (\n  <>\n    <Paragraph>\n      <Text variant=\"bold\">\n        {modalContent['example.default.checkboxContentEdited']}\n      </Text>\n      <br />\n      <Text>{modalContent['example.default.date']}</Text>\n    </Paragraph>\n    <Paragraph>\n      <Text variant=\"bold\">\n        {modalContent['example.default.checkboxContentEditedBy']}\n      </Text>\n      <br />\n      <Text>{modalContent['example.default.email']}</Text>\n    </Paragraph>\n  </>\n);\nExpanderExampleContent.displayName = 'ExpanderExampleContent';\n\nconst DefaultExample = ({\n  title,\n  desc,\n  ...passProps\n}: Partial<ModalProps> & { title: string; desc: string }): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  const [checked, setChecked] = useState({ 2: false, 3: false });\n\n  const saveDisabled = !checked[2] && !checked[3];\n\n  return (\n    <ComponentDescription mainTitle={title} description={desc}>\n      <ComponentExample style={{ marginBottom: defaultSuomifiTheme.spacing.s }}>\n        <Button onClick={() => setVisible(true)}>\n          {modalContent['example.openText']}\n        </Button>\n        <Modal\n          {...passProps}\n          appElementId=\"___gatsby\"\n          visible={visible}\n          onEscKeyDown={() => setVisible(false)}\n        >\n          <ModalContent>\n            <ModalTitle>{modalContent['example.default.title']}</ModalTitle>\n            <Paragraph>\n              <Text>{modalContent['example.default.content']}</Text>\n            </Paragraph>\n            <ExpanderGroup\n              openAllText={modalContent['example.default.groupOpenAll']}\n              closeAllText={modalContent['example.default.groupCloseAll']}\n            >\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-1\"\n                >\n                  <Checkbox\n                    disabled\n                    hintText={modalContent['example.default.checkboxHint1']}\n                    id=\"checkbox-id-1\"\n                  >\n                    {modalContent['example.default.checkboxLabel1']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-2\"\n                >\n                  <Checkbox\n                    hintText={modalContent['example.default.checkboxHint2']}\n                    id=\"checkbox-id-2\"\n                    checked={checked[2]}\n                    onClick={({ checkboxState }) => {\n                      setChecked({ ...checked, 2: checkboxState });\n                    }}\n                  >\n                    {modalContent['example.default.checkboxLabel2']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-3\"\n                >\n                  <Checkbox\n                    hintText={modalContent['example.default.checkboxHint3']}\n                    id=\"checkbox-id-3\"\n                    checked={checked[3]}\n                    onClick={({ checkboxState }) => {\n                      setChecked({ ...checked, 3: checkboxState });\n                    }}\n                  >\n                    {modalContent['example.default.checkboxLabel3']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n            </ExpanderGroup>\n          </ModalContent>\n          <ModalFooter>\n            <VisuallyHidden id=\"save-disabled\">\n              {modalContent['example.default.ariaPublishDisabled']}\n            </VisuallyHidden>\n            <Button\n              arial-label={modalContent['example.default.publish']}\n              onClick={() => setVisible(false)}\n              aria-disabled={saveDisabled}\n              {...(saveDisabled ? { 'aria-describedby': 'save-disabled' } : {})}\n            >\n              {modalContent['example.default.publish']}\n            </Button>\n            <Button\n              variant=\"secondary\"\n              arial-label={modalContent['example.default.cancel']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.default.cancel']}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </ComponentExample>\n    </ComponentDescription>\n  );\n};\n\nconst ConfirmExample = ({\n  title,\n  desc,\n  noCode,\n  ...passProps\n}: Partial<ModalProps> & {\n  title: string;\n  desc: string;\n  noCode: boolean;\n}): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <ComponentDescription mainTitle={title} description={desc} noCode={noCode}>\n      <ComponentExample style={{ marginBottom: defaultSuomifiTheme.spacing.s }}>\n        <Button onClick={() => setVisible(true)}>\n          {modalContent['example.openText']}\n        </Button>\n        <Modal\n          {...passProps}\n          scrollable={false}\n          appElementId=\"___gatsby\"\n          visible={visible}\n          onEscKeyDown={() => setVisible(false)}\n        >\n          <ModalContent>\n            <ModalTitle>{modalContent['example.confirm.title']}</ModalTitle>\n            <Paragraph>\n              <Text>{modalContent['example.confirm.content']}</Text>\n            </Paragraph>\n          </ModalContent>\n          <ModalFooter>\n            <Button\n              arial-label={modalContent['example.confirm.ariaSave']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.confirm.save']}\n            </Button>\n            <Button\n              variant=\"secondary\"\n              arial-label={modalContent['example.confirm.ariaCancel']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.confirm.cancel']}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </ComponentExample>\n    </ComponentDescription>\n  );\n};\n\nexport default Page;\n"],"names":["title","items","React","style","background","defaultSuomifiTheme","margin","padding","border","Heading","variant","as","map","item","index","key","Text","ExpanderExampleContent","Paragraph","modalContent","displayName","DefaultExample","desc","passProps","useState","visible","setVisible","checked","setChecked","saveDisabled","ComponentDescription","mainTitle","description","ComponentExample","marginBottom","Button","onClick","Modal","appElementId","onEscKeyDown","ModalContent","ModalTitle","ExpanderGroup","openAllText","closeAllText","Expander","ExpanderTitle","ariaOpenText","ariaCloseText","toggleButtonAriaDescribedBy","Checkbox","disabled","hintText","id","ExpanderContent","checkboxState","ModalFooter","VisuallyHidden","ConfirmExample","noCode","scrollable","Layout","sideNavData","SEO","ResponsiveParagraph","ResponsiveText","NoteBox","section","Section","paragraphs","links"],"sourceRoot":""}