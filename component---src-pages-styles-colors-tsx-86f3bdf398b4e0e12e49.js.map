{"version":3,"file":"component---src-pages-styles-colors-tsx-86f3bdf398b4e0e12e49.js","mappings":"yKAqCA,IAhCgB,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACdC,EAAAA,cAAAA,UAAAA,CACEC,MAAO,CACLC,WAAYC,EAAAA,EAAAA,OAAAA,gBACZC,OAAWD,EAAAA,EAAAA,QAAAA,GAAL,KACNE,QAASF,EAAAA,EAAAA,QAAAA,EACTG,OAAO,aAAcH,EAAAA,EAAAA,OAAAA,cAGvBH,EAAAA,cAACO,EAAAA,GAAD,CAASC,QAAQ,KAAKC,GAAG,MACtBX,GAEHE,EAAAA,cAAAA,KAAAA,CACEC,MAAO,CAAEG,OAAQ,EAAGC,QAAQ,SAAUF,EAAAA,EAAAA,QAAAA,IAErCJ,EAAMW,KACL,SAACC,EAAMC,GAAP,QACID,GACAX,EAAAA,cAAAA,KAAAA,CAAIa,IAAKD,EAAOX,MAAO,CAAEG,OAAQD,EAAAA,EAAAA,QAAAA,IAC/BH,EAAAA,cAACc,EAAAA,GAAD,KAAOH,GAJd,KAfP,C,8FCGMI,EAA2B,CAC/BjB,MAAOkB,EAAAA,GACPC,KAAMjB,EAAAA,cAACkB,EAAAA,EAAD,CAAYD,KAAK,cACvBlB,MAAO,CACL,CACEoB,GAAI,WACJC,SAAU,gBACVC,MAAOL,EAAAA,IAET,CAAEG,GAAI,iBAAkBE,MAAOC,EAAAA,IAC/B,CAAEH,GAAI,sBAAuBE,MAAOE,EAAAA,IACpC,CAAEJ,GAAI,kBAAmBE,MAAOG,EAAAA,SAGpC,K,+MCRMC,EAActB,EAAAA,EAAAA,OAEduB,EAAsB,aAAaD,EAAYE,YAY/CC,EAAqBC,OAAOC,QAAQL,GAAaM,QACrD,SAACC,EAAD,GAAwD,MAArCnB,EAAqC,KAAhCoB,EAAgC,KACtD,OAAO,OAAP,UACKD,IADL,MAEGnB,GAAM,CACLqB,KAAMrB,EACNoB,MAAAA,EACA3B,QACE6B,EAAAA,EAAAA,IAAaF,IAASE,EAAAA,EAAAA,IAAa,WAC/BT,EACA,KARV,GAFuB,GAczB,CAAC,GAQGU,EAAmC,CACvC,CACEC,GAAI,aACJT,OAAQ,CACNA,EAAOU,UACPV,EAAOW,YACPX,EAAOY,UACPZ,EAAOa,aAGX,CAAEJ,GAAI,cAAeT,OAAQ,CAACA,EAAOc,YACrC,CACEL,GAAI,gBACJT,OAAQ,CACNA,EAAOe,cACPf,EAAOgB,gBACPhB,EAAOiB,gBACPjB,EAAOkB,gBACPlB,EAAOmB,eACPnB,EAAOY,UACPZ,EAAOoB,YACPpB,EAAOa,WACPb,EAAOqB,WACPrB,EAAOsB,sBAGX,CACEb,GAAI,aACJT,OAAQ,CAACA,EAAOqB,WAAYrB,EAAOY,UAAWZ,EAAOa,aAEvD,CACEJ,GAAI,mBACJT,OAAQ,CACNA,EAAOuB,UACPvB,EAAOwB,YACPxB,EAAOD,YACPC,EAAOiB,gBACPjB,EAAOkB,gBACPlB,EAAOyB,gBACPzB,EAAO0B,eACP1B,EAAO2B,sBAGX,CACElB,GAAI,gBACJT,OAAQ,CACNA,EAAO4B,YACP5B,EAAO6B,iBACP7B,EAAO8B,YACP9B,EAAO+B,UACP/B,EAAOgC,cAGX,CACEvB,GAAI,eACJT,OAAQ,CACNA,EAAOqB,WACPrB,EAAOiC,gBACPjC,EAAOkC,sBACPlC,EAAOmC,kBASAC,EAAY,SAACC,GAExB,IAAMC,EAASD,EAAKE,QAAQ,2BAA4B,IAAIC,MAAM,KAC5DC,EAAMC,SAASJ,EAAO,GAAI,IAC1BK,EAAuBD,SAASJ,EAAO,GAAI,IAC3CM,EAAsBF,SAASJ,EAAO,GAAI,IAC1CO,EAAaF,EAAuB,IACpCG,EAAYF,EAAsB,IACxC,OACGG,OAAOC,UAAUP,IACjBM,OAAOC,UAAUL,IACjBI,OAAOC,UAAUJ,IAIbK,EAAAA,EAAAA,IAAiB,CACtBR,IAAAA,EACAI,WAAAA,EACAC,UAAAA,IALO,EAbJ,EA0GP,UAtDa,kBACX1E,EAAAA,cAAC8E,EAAAA,EAAD,CAAQ/D,YAAaA,EAAAA,GACnBf,EAAAA,cAAC+E,EAAAA,EAAD,CAAKjF,MAAO0B,EAAAA,QACZxB,EAAAA,cAACO,EAAAA,GAAD,CAASC,QAAQ,MAAMgB,EAAAA,OAEvBxB,EAAAA,cAACgF,EAAAA,GAAD,CAAWxE,QAAQ,QACjBR,EAAAA,cAACc,EAAAA,GAAD,CAAMN,QAAQ,QAAQgB,EAAAA,QAGxBxB,EAAAA,cAACiF,EAAAA,EAAD,CACEnF,MAAO0B,EAAAA,cACPzB,MAAOyB,EAAAA,gBAGRA,EAAAA,SAAAA,KAA2B,SAAC0D,EAAuBtE,GAAxB,OAC1BZ,EAAAA,cAACmF,EAAAA,EAAD,CACEtE,IAAKD,EACLwE,UAAWF,EAAQpF,MACnBuF,WAAYH,EAAQG,WACpBC,MAAOJ,EAAQI,OALlB,IASAlD,EAAgB1B,KAAI,SAACC,GAAD,OACnBX,EAAAA,cAACuF,EAAAA,EAAD,CACE1E,IAAKF,EAAK0B,GACV+C,UAAW5D,EAAiBb,EAAK0B,GAAT,UACxBmD,YAAahE,EAAiBb,EAAK0B,GAAT,gBAC1BoD,cAAc,EACdC,QAAM,GAEN1F,EAAAA,cAAC2F,EAAAA,EAAD,CACE1F,MAAO,CACLI,QAAS,EACTuF,eAAgB,aAChB1F,WAAY,OACZI,OAAQ,SAGTK,EAAKiB,OAAOlB,KAAI,SAACmF,EAAOjF,GAAR,OApEzByB,EAsEe1B,EAAK0B,GADK,IACCzB,EArE1BsB,EAsEY2D,EAAM3D,KArElBD,EAsEY4D,EAAM5D,MArElBZ,EAsEYG,EAAiBqE,EAAM3D,KAAV,UArEzBjC,EAsEY,CAAEK,OAAQuF,EAAMvF,QApE5BN,EAAAA,cAAAA,MAAAA,CACEa,IAAKwB,EACLpC,MAAO,CACLG,OAAWD,EAAAA,EAAAA,QAAAA,GAAL,IAAuCA,EAAAA,EAAAA,QAAAA,GAAvC,IAAyEA,EAAAA,EAAAA,QAAAA,GAAzE,KACN2F,WAAY,SAGd9F,EAAAA,cAAAA,MAAAA,CACEC,MAAK,eACH8F,MAAO,QACPC,OAAQ,OACRC,aAAc9F,EAAAA,EAAAA,QAAAA,EACdD,WAAY+B,GACThC,KAGPD,EAAAA,cAAAA,MAAAA,CAAKC,MAAO,CAAEiG,SAAU,UAAY7E,GACpCrB,EAAAA,cAAAA,MAAAA,CAAKC,MAAO,CAAEiG,SAAU,UAAYjE,GACpCjC,EAAAA,cAAAA,MAAAA,CAAKC,MAAO,CAAEiG,SAAU,UAAYlC,EAAU/B,IAC9CjC,EAAAA,cAAAA,MAAAA,CAAKC,MAAO,CAAEiG,SAAU,UAAYhE,IA1BhB,IACtBG,EACAH,EACAD,EACAZ,EACApB,CAgES,KAhBN,IAvBL,C","sources":["webpack://suomifi-design-system/./src/components/NoteBox.tsx","webpack://suomifi-design-system/./src/config/sidenav/styles.tsx","webpack://suomifi-design-system/./src/pages/styles/colors.tsx"],"sourcesContent":["import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React from 'react';\nimport { StaticIcon } from 'suomifi-ui-components';\nimport { SideNavData } from 'components/SideNavData';\nimport stylesContent from '../../../locale/fi/styles.json';\nimport iconsContent from '../../../locale/fi/icons.json';\nimport typographyContent from '../../../locale/fi/typography.json';\nimport colorsContent from '../../../locale/fi/colors.json';\n\nconst sideNavData: SideNavData = {\n  title: stylesContent.title,\n  icon: <StaticIcon icon=\"magicWand\" />,\n  items: [\n    {\n      to: '/styles/',\n      showAsTo: '/styles/info/',\n      label: stylesContent['info.title'],\n    },\n    { to: '/styles/icons/', label: iconsContent.title },\n    { to: '/styles/typography/', label: typographyContent.title },\n    { to: '/styles/colors/', label: colorsContent.title },\n  ],\n};\nexport default sideNavData;\n","import React, { CSSProperties } from 'react';\nimport { defaultSuomifiTheme, ColorDesignTokens } from 'suomifi-ui-components';\nimport { getLuminance, hslToColorString } from 'polished';\n\nimport colorsContent from '../../../locale/fi/colors.json';\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/styles';\nimport NoteBox from 'components/NoteBox';\nimport Section, { Props as SectionProps } from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\n\nconst colorTokens = defaultSuomifiTheme.colors;\n\nconst borderForLightColor = `1px solid ${colorTokens.depthLight1}`;\n\ntype ColorKeys = keyof ColorDesignTokens;\n\ninterface ColorItem {\n  name: string;\n  value: string;\n  border: string;\n}\n\ntype ColorTypes = { [key in ColorKeys]?: ColorItem };\n\nconst colors: ColorTypes = Object.entries(colorTokens).reduce(\n  (obj: ColorTypes, [key, value]: [ColorKeys, string]) => {\n    return {\n      ...obj,\n      [key]: {\n        name: key,\n        value,\n        border:\n          getLuminance(value) > getLuminance('#f8f8f8')\n            ? borderForLightColor\n            : '0',\n      },\n    };\n  },\n  {},\n);\n\ntype ColorCategory = {\n  id: string;\n  colors: ColorItem[];\n};\n\nconst colorCategories: ColorCategory[] = [\n  {\n    id: 'textColors',\n    colors: [\n      colors.blackBase,\n      colors.blackLight1,\n      colors.depthBase,\n      colors.depthDark1,\n    ],\n  },\n  { id: 'brandColors', colors: [colors.brandBase] },\n  {\n    id: 'controlColors',\n    colors: [\n      colors.highlightBase,\n      colors.highlightLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightDark1,\n      colors.depthBase,\n      colors.depthLight2,\n      colors.depthDark1,\n      colors.accentBase,\n      colors.accentTertiaryDark1,\n    ],\n  },\n  {\n    id: 'iconColors',\n    colors: [colors.accentBase, colors.depthBase, colors.depthDark1],\n  },\n  {\n    id: 'backgroundColors',\n    colors: [\n      colors.whiteBase,\n      colors.depthLight3,\n      colors.depthLight1,\n      colors.highlightLight2,\n      colors.highlightLight3,\n      colors.highlightLight4,\n      colors.depthSecondary,\n      colors.depthSecondaryDark1,\n    ],\n  },\n  {\n    id: 'trafficColors',\n    colors: [\n      colors.successBase,\n      colors.successSecondary,\n      colors.warningBase,\n      colors.alertBase,\n      colors.alertLight1,\n    ],\n  },\n  {\n    id: 'accentColors',\n    colors: [\n      colors.accentBase,\n      colors.accentSecondary,\n      colors.accentSecondaryLight1,\n      colors.accentTertiary,\n    ],\n  },\n];\n\n/**\n * Convert HSLA or HSL to hex, does not take account the alpha value\n * @param hsla\n */\nexport const hslaToHex = (hsla: string): string => {\n  // eslint-disable-next-line no-useless-escape\n  const values = hsla.replace(/(hsla\\(|hsl\\(|\\)|\\%|\\s)/g, '').split(',');\n  const hue = parseInt(values[0], 10);\n  const saturationPercentage = parseInt(values[1], 10);\n  const lightnessPercentage = parseInt(values[2], 10);\n  const saturation = saturationPercentage / 100;\n  const lightness = lightnessPercentage / 100;\n  if (\n    !Number.isInteger(hue) ||\n    !Number.isInteger(saturationPercentage) ||\n    !Number.isInteger(lightnessPercentage)\n  ) {\n    return '';\n  }\n  return hslToColorString({\n    hue,\n    saturation,\n    lightness,\n  });\n};\n\nconst getExampleColor = (\n  id: string,\n  name: string,\n  value: string,\n  label: string,\n  style?: CSSProperties,\n): JSX.Element => (\n  <div\n    key={id}\n    style={{\n      margin: `${defaultSuomifiTheme.spacing.xs} ${defaultSuomifiTheme.spacing.xl} ${defaultSuomifiTheme.spacing.xl} 0`,\n      lineHeight: '1rem',\n    }}\n  >\n    <div\n      style={{\n        width: '10rem',\n        height: '3rem',\n        marginBottom: defaultSuomifiTheme.spacing.s,\n        background: value,\n        ...style,\n      }}\n    />\n    <div style={{ fontSize: '.8rem' }}>{label}</div>\n    <div style={{ fontSize: '.8rem' }}>{value}</div>\n    <div style={{ fontSize: '.8rem' }}>{hslaToHex(value)}</div>\n    <div style={{ fontSize: '.8rem' }}>{name}</div>\n  </div>\n);\n\nconst Page = (): JSX.Element => (\n  <Layout sideNavData={sideNavData}>\n    <SEO title={colorsContent.title} />\n    <Heading variant=\"h1\">{colorsContent.title}</Heading>\n\n    <Paragraph variant=\"lead\">\n      <Text variant=\"lead\">{colorsContent.intro}</Text>\n    </Paragraph>\n\n    <NoteBox\n      title={colorsContent['note.title']}\n      items={colorsContent['note.items']}\n    />\n\n    {colorsContent.sections.map((section: SectionProps, index: number) => (\n      <Section\n        key={index}\n        mainTitle={section.title}\n        paragraphs={section.paragraphs}\n        links={section.links}\n      />\n    ))}\n\n    {colorCategories.map((item) => (\n      <ComponentDescription\n        key={item.id}\n        mainTitle={colorsContent[`${item.id}.title`]}\n        description={colorsContent[`${item.id}.description`]}\n        exampleFirst={false}\n        noCode\n      >\n        <ComponentExample\n          style={{\n            padding: 0,\n            justifyContent: 'flex-start',\n            background: 'none',\n            border: 'none',\n          }}\n        >\n          {item.colors.map((color, index) =>\n            getExampleColor(\n              `${item.id}.${index}`,\n              color.name,\n              color.value,\n              colorsContent[`${color.name}.label`],\n              { border: color.border },\n            ),\n          )}\n        </ComponentExample>\n      </ComponentDescription>\n    ))}\n  </Layout>\n);\n\nexport default Page;\n"],"names":["title","items","React","style","background","defaultSuomifiTheme","margin","padding","border","Heading","variant","as","map","item","index","key","Text","sideNavData","stylesContent","icon","StaticIcon","to","showAsTo","label","iconsContent","typographyContent","colorsContent","colorTokens","borderForLightColor","depthLight1","colors","Object","entries","reduce","obj","value","name","getLuminance","colorCategories","id","blackBase","blackLight1","depthBase","depthDark1","brandBase","highlightBase","highlightLight1","highlightLight2","highlightLight3","highlightDark1","depthLight2","accentBase","accentTertiaryDark1","whiteBase","depthLight3","highlightLight4","depthSecondary","depthSecondaryDark1","successBase","successSecondary","warningBase","alertBase","alertLight1","accentSecondary","accentSecondaryLight1","accentTertiary","hslaToHex","hsla","values","replace","split","hue","parseInt","saturationPercentage","lightnessPercentage","saturation","lightness","Number","isInteger","hslToColorString","Layout","SEO","Paragraph","NoteBox","section","Section","mainTitle","paragraphs","links","ComponentDescription","description","exampleFirst","noCode","ComponentExample","justifyContent","color","lineHeight","width","height","marginBottom","fontSize"],"sourceRoot":""}