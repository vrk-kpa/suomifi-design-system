{"version":3,"file":"component---src-pages-components-modal-tsx-a3594931d7f45e4c6a38.js","mappings":"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","sources":["webpack://suomifi-design-system/./src/components/NoteBox.tsx","webpack://suomifi-design-system/./src/pages/components/modal.tsx"],"sourcesContent":["import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { useState } from 'react';\n\nimport modalContent from '../../../locale/fi/modal.json';\nimport { defaultSuomifiTheme, ModalProps } from 'suomifi-ui-components';\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport {\n  Text,\n  Paragraph,\n  Modal,\n  ModalContent,\n  ModalTitle,\n  ModalFooter,\n  Button,\n  Expander,\n  ExpanderGroup,\n  ExpanderContent,\n  ExpanderTitle,\n  Checkbox,\n  VisuallyHidden,\n} from 'components/ExampleComponents';\nimport {\n  Heading,\n  Text as ResponsiveText,\n  Paragraph as ResponsiveParagraph,\n} from 'components/ResponsiveComponents';\nimport ComponentDescription from 'components/ComponentDescription';\nimport Section from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\n\nconst Page = (): JSX.Element => (\n  <Layout sideNavData={sideNavData}>\n    <SEO title={modalContent.title} />\n    <Heading variant=\"h1\">{modalContent.title}</Heading>\n\n    <ResponsiveParagraph variant=\"lead\">\n      <ResponsiveText variant=\"lead\">{modalContent.intro}</ResponsiveText>\n    </ResponsiveParagraph>\n\n    <ConfirmExample title=\"\" desc=\"\" noCode />\n\n    <NoteBox\n      title={modalContent['note.title']}\n      items={modalContent['note.items']}\n    />\n\n    {modalContent.sections.map((section, index) => (\n      <Section\n        key={index}\n        mainTitle={section.title}\n        paragraphs={section.paragraphs}\n        links={section.links}\n      />\n    ))}\n\n    <ConfirmExample\n      title={modalContent['example.confirm.heading']}\n      desc={modalContent['example.confirm.description']}\n      noCode={false}\n    />\n\n    <DefaultExample\n      title={modalContent['example.default.heading']}\n      desc={modalContent['example.default.description']}\n    />\n    <DefaultExample\n      variant=\"smallScreen\"\n      title={modalContent['example.smallScreen.heading']}\n      desc={modalContent['example.smallScreen.description']}\n    />\n  </Layout>\n);\n\nconst ExpanderExampleContent = (): JSX.Element => (\n  <>\n    <Paragraph>\n      <Text variant=\"bold\">\n        {modalContent['example.default.checkboxContentEdited']}\n      </Text>\n      <br />\n      <Text>{modalContent['example.default.date']}</Text>\n    </Paragraph>\n    <Paragraph>\n      <Text variant=\"bold\">\n        {modalContent['example.default.checkboxContentEditedBy']}\n      </Text>\n      <br />\n      <Text>{modalContent['example.default.email']}</Text>\n    </Paragraph>\n  </>\n);\nExpanderExampleContent.displayName = 'ExpanderExampleContent';\n\nconst DefaultExample = ({\n  title,\n  desc,\n  ...passProps\n}: Partial<ModalProps> & { title: string; desc: string }): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  const [checked, setChecked] = useState({ 2: false, 3: false });\n\n  const saveDisabled = !checked[2] && !checked[3];\n\n  return (\n    <ComponentDescription mainTitle={title} description={desc}>\n      <ComponentExample style={{ marginBottom: defaultSuomifiTheme.spacing.s }}>\n        <Button onClick={() => setVisible(true)}>\n          {modalContent['example.openText']}\n        </Button>\n        <Modal\n          {...passProps}\n          appElementId=\"___gatsby\"\n          visible={visible}\n          onEscKeyDown={() => setVisible(false)}\n        >\n          <ModalContent>\n            <ModalTitle>{modalContent['example.default.title']}</ModalTitle>\n            <Paragraph>\n              <Text>{modalContent['example.default.content']}</Text>\n            </Paragraph>\n            <ExpanderGroup\n              openAllText={modalContent['example.default.groupOpenAll']}\n              closeAllText={modalContent['example.default.groupCloseAll']}\n            >\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-1\"\n                >\n                  <Checkbox\n                    disabled\n                    hintText={modalContent['example.default.checkboxHint1']}\n                    id=\"checkbox-id-1\"\n                  >\n                    {modalContent['example.default.checkboxLabel1']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-2\"\n                >\n                  <Checkbox\n                    hintText={modalContent['example.default.checkboxHint2']}\n                    id=\"checkbox-id-2\"\n                    checked={checked[2]}\n                    onClick={({ checkboxState }) => {\n                      setChecked({ ...checked, 2: checkboxState });\n                    }}\n                  >\n                    {modalContent['example.default.checkboxLabel2']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n              <Expander>\n                <ExpanderTitle\n                  ariaOpenText={modalContent['example.default.ariaOpen']}\n                  ariaCloseText={modalContent['example.default.ariaClose']}\n                  toggleButtonAriaDescribedBy=\"checkbox-id-3\"\n                >\n                  <Checkbox\n                    hintText={modalContent['example.default.checkboxHint3']}\n                    id=\"checkbox-id-3\"\n                    checked={checked[3]}\n                    onClick={({ checkboxState }) => {\n                      setChecked({ ...checked, 3: checkboxState });\n                    }}\n                  >\n                    {modalContent['example.default.checkboxLabel3']}\n                  </Checkbox>\n                </ExpanderTitle>\n                <ExpanderContent>\n                  <ExpanderExampleContent />\n                </ExpanderContent>\n              </Expander>\n            </ExpanderGroup>\n          </ModalContent>\n          <ModalFooter>\n            <VisuallyHidden id=\"save-disabled\">\n              {modalContent['example.default.ariaPublishDisabled']}\n            </VisuallyHidden>\n            <Button\n              arial-label={modalContent['example.default.publish']}\n              onClick={() => setVisible(false)}\n              aria-disabled={saveDisabled}\n              {...(saveDisabled ? { 'aria-describedby': 'save-disabled' } : {})}\n            >\n              {modalContent['example.default.publish']}\n            </Button>\n            <Button\n              variant=\"secondary\"\n              arial-label={modalContent['example.default.cancel']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.default.cancel']}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </ComponentExample>\n    </ComponentDescription>\n  );\n};\n\nconst ConfirmExample = ({\n  title,\n  desc,\n  noCode,\n  ...passProps\n}: Partial<ModalProps> & {\n  title: string;\n  desc: string;\n  noCode: boolean;\n}): JSX.Element => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <ComponentDescription mainTitle={title} description={desc} noCode={noCode}>\n      <ComponentExample style={{ marginBottom: defaultSuomifiTheme.spacing.s }}>\n        <Button onClick={() => setVisible(true)}>\n          {modalContent['example.openText']}\n        </Button>\n        <Modal\n          {...passProps}\n          scrollable={false}\n          appElementId=\"___gatsby\"\n          visible={visible}\n          onEscKeyDown={() => setVisible(false)}\n        >\n          <ModalContent>\n            <ModalTitle>{modalContent['example.confirm.title']}</ModalTitle>\n            <Paragraph>\n              <Text>{modalContent['example.confirm.content']}</Text>\n            </Paragraph>\n          </ModalContent>\n          <ModalFooter>\n            <Button\n              arial-label={modalContent['example.confirm.ariaSave']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.confirm.save']}\n            </Button>\n            <Button\n              variant=\"secondary\"\n              arial-label={modalContent['example.confirm.ariaCancel']}\n              onClick={() => setVisible(false)}\n            >\n              {modalContent['example.confirm.cancel']}\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </ComponentExample>\n    </ComponentDescription>\n  );\n};\n\nexport default Page;\n"],"names":["title","items","style","background","defaultSuomifiTheme","margin","padding","border","variant","as","map","item","index","key","ExpanderExampleContent","modalContent","displayName","DefaultExample","desc","passProps","useState","visible","setVisible","checked","setChecked","saveDisabled","mainTitle","description","marginBottom","onClick","appElementId","onEscKeyDown","openAllText","closeAllText","ariaOpenText","ariaCloseText","toggleButtonAriaDescribedBy","disabled","hintText","id","checkboxState","ConfirmExample","noCode","scrollable","sideNavData","section","paragraphs","links"],"sourceRoot":""}