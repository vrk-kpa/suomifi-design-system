{"version":3,"file":"component---src-pages-components-toggle-tsx-03db6fd63f134e04b74a.js","mappings":"uKAqCA,IAhCgB,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACd,2BACEC,MAAO,CACLC,WAAYC,EAAAA,EAAAA,OAAAA,gBACZC,OAAWD,EAAAA,EAAAA,QAAAA,GAAL,KACNE,QAASF,EAAAA,EAAAA,QAAAA,EACTG,OAAQ,aAAaH,EAAAA,EAAAA,OAAAA,cAGvB,gBAAC,KAAD,CAASI,QAAQ,KAAKC,GAAG,MACtBT,GAEH,sBACEE,MAAO,CAAEG,OAAQ,EAAGC,QAAS,SAASF,EAAAA,EAAAA,QAAAA,IAErCH,EAAMS,KACL,SAACC,EAAMC,GAAP,QACID,GACA,sBAAIE,IAAKD,EAAOV,MAAO,CAAEG,OAAQD,EAAAA,EAAAA,QAAAA,IAC/B,gBAAC,KAAD,KAAOO,W,oKC2ErB,UArFa,WACX,OAA4CG,EAAAA,EAAAA,WAAS,GAA9CC,EAAP,KAAwBC,EAAxB,KACA,GAA0CF,EAAAA,EAAAA,WAAS,GAA5CG,EAAP,KAAuBC,EAAvB,KA4BA,OACE,gBAAC,IAAD,CAAQC,YAAaA,EAAAA,GACnB,gBAAC,IAAD,CAAKnB,MAAOoB,EAAAA,KACZ,gBAAC,KAAD,CAASZ,QAAQ,MAAMY,EAAAA,IAEvB,gBAAC,KAAD,CAAWZ,QAAQ,QACjB,gBAAC,KAAD,CAAMA,QAAQ,QAAQY,EAAAA,KAGxB,gBAAC,IAAD,CACEC,UAAWD,EAAAA,GACXE,YAAaF,EAAAA,IAEb,gBAAC,IAAD,CACElB,MAAO,CACLqB,cAAe,SACfC,WAAY,aACZC,eAAgB,gBAChBC,OAAQ,GAAGtB,EAAAA,EAAAA,QAAAA,QAGb,gBAAC,KAAD,CACE,aA9CNgB,EAAAA,IACCL,EACGK,EAAAA,GACAA,EAAAA,IA4CEO,QAAS,SAACC,GA9BlBZ,EA8BgDY,IACxCA,QAASb,GAERK,EAAAA,IAGH,gBAAC,KAAD,CACE,aA7CNA,EAAAA,IACCH,EACGG,EAAAA,GACAA,EAAAA,IA2CES,SAAU,SAACD,GAlCnBV,EAkCiDU,IACzCA,QAASX,GAERG,EAAAA,MAIP,gBAAC,IAAD,CACEpB,MAAOoB,EAAAA,GACPnB,MAAOmB,EAAAA,KAGRA,EAAAA,GAAAA,KAA2B,SAACU,EAASlB,GAAV,OAC1B,gBAAC,IAAD,CACEC,IAAKD,EACLS,UAAWS,EAAQ9B,MACnB+B,WAAYD,EAAQC,WACpBC,MAAOF,EAAQE","sources":["webpack://suomifi-design-system/./src/components/NoteBox.tsx","webpack://suomifi-design-system/./src/pages/components/toggle.tsx"],"sourcesContent":["import React from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport { Heading, Text } from 'components/ResponsiveComponents';\n\nconst NoteBox = ({ title, items }: Props): JSX.Element => (\n  <section\n    style={{\n      background: defaultSuomifiTheme.colors.highlightLight3,\n      margin: `${defaultSuomifiTheme.spacing.xl} 0`,\n      padding: defaultSuomifiTheme.spacing.m,\n      border: `1px solid ${defaultSuomifiTheme.colors.depthLight1}`,\n    }}\n  >\n    <Heading variant=\"h3\" as=\"h2\">\n      {title}\n    </Heading>\n    <ul\n      style={{ margin: 0, padding: `0 0 0 ${defaultSuomifiTheme.spacing.s}` }}\n    >\n      {items.map(\n        (item, index) =>\n          !!item && (\n            <li key={index} style={{ margin: defaultSuomifiTheme.spacing.m }}>\n              <Text>{item}</Text>\n            </li>\n          ),\n      )}\n    </ul>\n  </section>\n);\n\ninterface Props {\n  title: string;\n  items: string[];\n}\n\nexport default NoteBox;\n","import React, { useState } from 'react';\nimport { defaultSuomifiTheme } from 'suomifi-ui-components';\n\nimport toggleContent from '../../../locale/fi/toggle.json';\nimport Layout from 'components/layout';\nimport SEO from 'components/seo';\nimport ComponentDescription from 'components/ComponentDescription';\nimport sideNavData from 'config/sidenav/components';\nimport NoteBox from 'components/NoteBox';\nimport Section from 'components/Section';\nimport ComponentExample from 'components/ComponentExample';\nimport { Heading, Text, Paragraph } from 'components/ResponsiveComponents';\nimport { ToggleButton, ToggleInput } from 'components/ExampleComponents';\n\nconst Page = (): React.ReactElement => {\n  const [isButtonChecked, setButtonChecked] = useState(false);\n  const [isInputChecked, setInputChecked] = useState(false);\n\n  const getButtonAriaLabelText = (): string => {\n    return (\n      toggleContent['toggle.label.button'] +\n      (isButtonChecked\n        ? toggleContent['toggle.state.on']\n        : toggleContent['toggle.state.off'])\n    );\n  };\n\n  const getInputAriaLabelText = (): string => {\n    return (\n      toggleContent['toggle.label.input'] +\n      (isInputChecked\n        ? toggleContent['toggle.state.on']\n        : toggleContent['toggle.state.off'])\n    );\n  };\n\n  const handleButtonClick = (newState: boolean): void => {\n    setButtonChecked(newState);\n  };\n\n  const handleInputChange = (newState: boolean): void => {\n    setInputChecked(newState);\n  };\n\n  return (\n    <Layout sideNavData={sideNavData}>\n      <SEO title={toggleContent.title} />\n      <Heading variant=\"h1\">{toggleContent.title}</Heading>\n\n      <Paragraph variant=\"lead\">\n        <Text variant=\"lead\">{toggleContent.intro}</Text>\n      </Paragraph>\n\n      <ComponentDescription\n        mainTitle={toggleContent['default.title']}\n        description={toggleContent['default.description']}\n      >\n        <ComponentExample\n          style={{\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'space-between',\n            height: `${defaultSuomifiTheme.spacing.xxxxl}`,\n          }}\n        >\n          <ToggleButton\n            aria-label={getButtonAriaLabelText()}\n            onClick={(checked) => handleButtonClick(checked)}\n            checked={isButtonChecked}\n          >\n            {toggleContent['toggle.label.button']}\n          </ToggleButton>\n\n          <ToggleInput\n            aria-label={getInputAriaLabelText()}\n            onChange={(checked) => handleInputChange(checked)}\n            checked={isInputChecked}\n          >\n            {toggleContent['toggle.label.input']}\n          </ToggleInput>\n        </ComponentExample>\n      </ComponentDescription>\n      <NoteBox\n        title={toggleContent['note.title']}\n        items={toggleContent['note.items']}\n      />\n\n      {toggleContent.sections.map((section, index) => (\n        <Section\n          key={index}\n          mainTitle={section.title}\n          paragraphs={section.paragraphs}\n          links={section.links}\n        />\n      ))}\n    </Layout>\n  );\n};\n\nexport default Page;\n"],"names":["title","items","style","background","defaultSuomifiTheme","margin","padding","border","variant","as","map","item","index","key","useState","isButtonChecked","setButtonChecked","isInputChecked","setInputChecked","sideNavData","toggleContent","mainTitle","description","flexDirection","alignItems","justifyContent","height","onClick","checked","onChange","section","paragraphs","links"],"sourceRoot":""}